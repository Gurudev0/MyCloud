##########################################
 AWS MSK
##########################################
----*** Create MSK Cluster from AWS Console ***----
>> Custom Create
>> Provisioned
----*** Create IAM Role ***----
Go under IAM -->> Policies -->> Create Policy
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "kafka-cluster:Connect",
                "kafka-cluster:AlterCluster",
                "kafka-cluster:DescribeCluster"
            ],
            "Resource": [
                "arn:aws:kafka:region:Account-ID:cluster/MSKTutorialCluster/*"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "kafka-cluster:*Topic*",
                "kafka-cluster:WriteData",
                "kafka-cluster:ReadData"
            ],
            "Resource": [
                "arn:aws:kafka:region:Account-ID:topic/MSKTutorialCluster/*"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "kafka-cluster:AlterGroup",
                "kafka-cluster:DescribeGroup"
            ],
            "Resource": [
                "arn:aws:kafka:region:Account-ID:group/MSKTutorialCluster/*"
            ]
        }
    ]
}
>> Create a role with above Policy
----*** Connect to MSK Cluster ***----
>>> Launch an EC2 instance and attach the above role
>>> Set up kafka client on EC2
$ sudo apt update
$ sudo apt install openjdk-11-jdk openjdk-11-jre -y 
$ wget https://archive.apache.org/dist/kafka/3.5.1/kafka_2.13-3.5.1.tgz
$ tar -xzf kafka_2.13-3.5.1.tgz
$ sudo mv kafka_2.13-3.5.1 /usr/local/kafka
$ sudo chown ubuntu:ubuntu -R /usr/local/kafka/
$ nano .bashrc 
export KAFKA_HOME=/usr/local/kafka
export PATH=$PATH:$KAFKA_HOME/bin
export PATH=$PATH:$KAFKA_HOME/config
export PATH=$PATH:/usr/local/kafka/bin/
export PATH=$PATH:/usr/local/kafka/config/
$ cd /usr/local/kafka/libs
$ wget https://github.com/aws/aws-msk-iam-auth/releases/download/v1.1.1/aws-msk￾iam-auth-1.1.1-all.jar
$ cd ..
$ cd bin
$ nano client.properties
security.protocol=SASL_SSL
sasl.mechanism=AWS_MSK_IAM
sasl.jaas.config=software.amazon.msk.auth.iam.IAMLoginModule required;
sasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHa
ndler
----*** Work with MSK ***----
## Create a Topic
$ kafka-topics.sh --create --bootstrap-server b-3.mymsk1.jsfwzo.c2.kafka.us-east-
1.amazonaws.com:9098 --command-config client.properties --replication-factor 3 --
partitions 1 --topic my-topic-1
(Get bootstrapserverstring from ViewClientInformation)
## Run a Producer
$ kafka-console-producer.sh --broker-list b-3.mymsk1.jsfwzo.c2.kafka.us-east-
1.amazonaws.com:9098 --producer.config client.properties --topic my-topic-1
## Run a Consumer
$ kafka-console-consumer.sh --bootstrap-server b-3.mymsk1.jsfwzo.c2.kafka.us-east-
1.amazonaws.com:9098 --consumer.config client.properties --topic my-topic-1 --from￾beginning
$ kafka-topics.sh --describe --bootstrap-server b-3.mymsk1.jsfwzo.c2.kafka.us-east-
1.amazonaws.com:9098 --command-config client.properties
## Configure auto scaling 
Properties - Auto Scaling for Storage
## Create custom cluster configurations
Cluster Configuration -> Create Cluster Configuration
Add below config
log.retention.hours=168
MSK Cluster -> Cluster Configuration -> Edit
Select the config & Save 
Check under Cluster OperationsCreate a role with above Policy
----*** Connect to MSK Cluster ***----
>>> Launch an EC2 instance and attach the above role
>>> Set up kafka client on EC2
$ sudo apt update
$ sudo apt install openjdk-11-jdk openjdk-11-jre -y 
$ wget https://archive.apache.org/dist/kafka/3.5.1/kafka_2.13-3.5.1.tgz
$ tar -xzf kafka_2.13-3.5.1.tgz
$ sudo mv kafka_2.13-3.5.1 /usr/local/kafka
$ sudo chown ubuntu:ubuntu -R /usr/local/kafka/
$ nano .bashrc 
export KAFKA_HOME=/usr/local/kafka
export PATH=$PATH:$KAFKA_HOME/bin
export PATH=$PATH:$KAFKA_HOME/config
export PATH=$PATH:/usr/local/kafka/bin/
export PATH=$PATH:/usr/local/kafka/config/
$ cd /usr/local/kafka/libs
$ wget https://github.com/aws/aws-msk-iam-auth/releases/download/v1.1.1/aws-msk￾iam-auth-1.1.1-all.jar
$ cd ..
$ cd bin
$ nano client.properties
security.protocol=SASL_SSL
sasl.mechanism=AWS_MSK_IAM
sasl.jaas.config=software.amazon.msk.auth.iam.IAMLoginModule required;
sasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHa
ndler
----*** Work with MSK ***----
## Create a Topic
$ kafka-topics.sh --create --bootstrap-server b-3.mymsk1.jsfwzo.c2.kafka.us-east-
1.amazonaws.com:9098 --command-config client.properties --replication-factor 3 --
partitions 1 --topic my-topic-1
(Get bootstrapserverstring from ViewClientInformation)
## Run a Producer
$ kafka-console-producer.sh --broker-list b-3.mymsk1.jsfwzo.c2.kafka.us-east-
1.amazonaws.com:9098 --producer.config client.properties --topic my-topic-1
## Run a Consumer
$ kafka-console-consumer.sh --bootstrap-server b-3.mymsk1.jsfwzo.c2.kafka.us-east-
1.amazonaws.com:9098 --consumer.config client.properties --topic my-topic-1 --from￾beginning
$ kafka-topics.sh --describe --bootstrap-server b-3.mymsk1.jsfwzo.c2.kafka.us-east-
1.amazonaws.com:9098 --command-config client.properties
## Configure auto scaling 
Properties - Auto Scaling for Storage
## Create custom cluster configurations
Cluster Configuration -> Create Cluster Configuration
Add below config
log.retention.hours=168
MSK Cluster -> Cluster Configuration -> Edit
Select the config & Save 
Check under Cluster Operations
